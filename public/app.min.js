const timezones=[{value:"Pacific/Midway",label:"(GMT-11:00) Midway"},{value:"Pacific/Honolulu",label:"(GMT-10:00) Hawaii"},{value:"America/Anchorage",label:"(GMT-09:00) Alaska"},{value:"America/Los_Angeles",label:"(GMT-08:00) Pacific Time (US & Canada)"},{value:"America/Denver",label:"(GMT-07:00) Mountain Time (US & Canada)"},{value:"America/Chicago",label:"(GMT-06:00) Central Time (US & Canada)"},{value:"America/New_York",label:"(GMT-05:00) Eastern Time (US & Canada)"},{value:"America/Halifax",label:"(GMT-04:00) Atlantic Time (Canada)"},{value:"America/St_Johns",label:"(GMT-03:30) Newfoundland"},{value:"America/Sao_Paulo",label:"(GMT-03:00) Brasilia"},{value:"Atlantic/South_Georgia",label:"(GMT-02:00) Mid-Atlantic"},{value:"Atlantic/Azores",label:"(GMT-01:00) Azores"},{value:"Europe/London",label:"(GMT+00:00) London"},{value:"Europe/Paris",label:"(GMT+01:00) Paris"},{value:"Europe/Helsinki",label:"(GMT+02:00) Helsinki"},{value:"Europe/Moscow",label:"(GMT+03:00) Moscow"},{value:"Asia/Dubai",label:"(GMT+04:00) Dubai"},{value:"Asia/Karachi",label:"(GMT+05:00) Islamabad"},{value:"Asia/Dhaka",label:"(GMT+06:00) Dhaka"},{value:"Asia/Bangkok",label:"(GMT+07:00) Bangkok"},{value:"Asia/Hong_Kong",label:"(GMT+08:00) Hong Kong"},{value:"Asia/Tokyo",label:"(GMT+09:00) Tokyo"},{value:"Australia/Sydney",label:"(GMT+10:00) Sydney"},{value:"Pacific/Noumea",label:"(GMT+11:00) New Caledonia"},{value:"Pacific/Auckland",label:"(GMT+12:00) Auckland"},{value:"Pacific/Tongatapu",label:"(GMT+13:00) Nuku'alofa"}];let is24Hour=getTimeFormatPreference();function addClock(){const e=document.getElementById("timezone"),t=document.getElementById("label");if(JSON.parse(localStorage.getItem("worldClocks")||"[]").length>=6)return void alert("You can only add up to 6 clocks.");const a=e.value,l=t.value.trim()||getTimezoneName(a);if(!a)return void alert("Please select a timezone");const o={id:Date.now().toString(),timezone:a,label:l};saveClock(o),createClockElement(o),e.selectedIndex=0,t.value=""}function saveClock(e){const t=JSON.parse(localStorage.getItem("worldClocks")||"[]");t.push(e),localStorage.setItem("worldClocks",JSON.stringify(t))}function loadSavedClocks(){JSON.parse(localStorage.getItem("worldClocks")||"[]").forEach(e=>createClockElement(e))}function createClockElement(e){const t=document.getElementById("clocksContainer"),a=document.createElement("div");a.className="clock-card p-8 flex flex-col",a.id=`clock-${e.id}`,a.innerHTML=`\n        <div class="flex justify-between items-start mb-2">\n            <h3 class="text-2xl font-bold text-gray-900">${e.label}</h3>\n            <button class="text-red-400 hover:text-red-600 bg-gray-100 rounded-full p-2 transition delete-clock" data-id="${e.id}" title="Remove clock">\n                <svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5" fill="none" viewBox="0 0 24 24" stroke="currentColor">\n                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M6 18L18 6M6 6l12 12" />\n                </svg>\n            </button>\n        </div>\n        <div class="text-4xl font-extrabold text-gray-800 text-center my-4" id="time-${e.id}">00:00:00</div>\n        <div class="text-lg text-center text-gray-500" id="date-${e.id}">January 1, 2023</div>\n        <div class="mt-2 text-sm text-gray-400">${getTimezoneLabel(e.timezone)}</div>\n        <div class="progress-bar"><div class="progress-bar-inner"></div></div>\n    `,t.appendChild(a),a.querySelector(".delete-clock").addEventListener("click",function(){deleteClockWrapper(e.id)}),updateClock(e.id,e.timezone)}function updateAllClocks(){JSON.parse(localStorage.getItem("worldClocks")||"[]").forEach(e=>{updateClock(e.id,e.timezone)})}function updateClock(e,t){try{const a={timeZone:t,hour12:!is24Hour,hour:"2-digit",minute:"2-digit",second:"2-digit"},l={timeZone:t,weekday:"long",year:"numeric",month:"long",day:"numeric"},o=new Date,n=o.toLocaleTimeString("en-US",a),c=o.toLocaleDateString("en-US",l);document.getElementById(`time-${e}`).textContent=n,document.getElementById(`date-${e}`).textContent=c}catch(t){console.error(`Error updating clock ${e}:`,t)}}function deleteClock(e){const t=document.getElementById(`clock-${e}`);t&&t.remove();const a=JSON.parse(localStorage.getItem("worldClocks")||"[]").filter(t=>t.id!==e);localStorage.setItem("worldClocks",JSON.stringify(a))}function getTimezoneName(e){const t=timezones.find(t=>t.value===e);return t&&t.label.split(") ")[1]||e}function getTimezoneLabel(e){const t=timezones.find(t=>t.value===e);return t?t.label:e}function setTimeFormatPreference(e){localStorage.setItem("clockTimeFormat24",e?"1":"0")}function getTimeFormatPreference(){return"1"===localStorage.getItem("clockTimeFormat24")}function updateAddClockButtonState(){const e=document.querySelector('#addClockForm button[type="submit"]');if(!e)return;const t=JSON.parse(localStorage.getItem("worldClocks")||"[]");e.disabled=t.length>=6,e.classList.toggle("opacity-50",t.length>=6),e.classList.toggle("cursor-not-allowed",t.length>=6)}function addClockWrapper(){addClock(),updateAddClockButtonState()}function deleteClockWrapper(e){deleteClock(e),updateAddClockButtonState()}document.addEventListener("DOMContentLoaded",function(){document.getElementById("currentYear").textContent=(new Date).getFullYear();const e=document.getElementById("timezone");timezones.forEach(t=>{const a=document.createElement("option");a.value=t.value,a.textContent=t.label,e.appendChild(a)}),loadSavedClocks(),document.getElementById("addClockForm").addEventListener("submit",function(e){e.preventDefault(),addClockWrapper()}),setInterval(updateAllClocks,1e3);const t=document.getElementById("toggleTimeFormat");t&&(t.checked=is24Hour,t.addEventListener("change",function(){is24Hour=t.checked,setTimeFormatPreference(is24Hour),updateAllClocks()})),updateAddClockButtonState()});